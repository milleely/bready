// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(cuid())
  name              String
  email             String             @unique
  avatar            String?
  color             String             // For UI theming
  expenses          Expense[]
  recurringExpenses RecurringExpense[]
  createdAt         DateTime           @default(now())
}

model Expense {
  id          String   @id @default(cuid())
  amount      Float
  category    String
  description String
  date        DateTime
  isShared    Boolean  @default(false)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([category])
  @@index([date])
}

model Budget {
  id        String   @id @default(cuid())
  category  String
  amount    Float
  month     String   // Format: "YYYY-MM"
  userId    String?  // Optional: null means shared budget for all users
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([category, month, userId])
  @@index([month])
  @@index([userId])
}

model RecurringExpense {
  id          String   @id @default(cuid())
  amount      Float
  category    String
  description String
  frequency   String   // "monthly", "weekly", "yearly"
  dayOfMonth  Int?     // For monthly: 1-31 (day of month to create expense)
  dayOfWeek   Int?     // For weekly: 0-6 (0=Sunday)
  monthOfYear Int?     // For yearly: 1-12
  isShared    Boolean  @default(false)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  nextDate    DateTime // Next date to create the expense
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([nextDate])
  @@index([isActive])
}
